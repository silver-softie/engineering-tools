name: Create Release

on:
  push:
    tags:
      - 'v*' # Triggers the workflow when a tag starting with 'v' is pushed

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies (Apache)
        run: npm ci

      - name: Build (Apache)
        run: npm run build-apache engineering-tools

      - name: Test
        run: npm run test

      - name: Compress Directory
        run: |
          mkdir -p release
          cd dist/engineering-tools/browser
          zip -r ../../../release/engineering-tools-apache.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Apache)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/engineering-tools-apache.zip
          asset_name: engineering-tools-apache.zip
          asset_content_type: application/zip

      - name: Clean build folder
        run: rm -rf dist

      - name: Install dependencies (production)
        run: npm ci

      - name: Build (production)
        run: npm run build-apache engineering-tools

      - name: Compress Directory (production)
        run: |
          mkdir -p release
          cd dist/engineering-tools/browser
          zip -r ../../../release/engineering-tools.zip .

      - name: Upload Release Asset (production)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/engineering-tools.zip
          asset_name: engineering-tools.zip
          asset_content_type: application/zip

