name: Create Release and Push Docker Image

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build-apache engineering-tools

    - name: Test
      run: npm run test

    - name: Extract version from package.json
      id: package_version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

  release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from package.json
        id: package_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies (Apache)
        run: npm ci

      - name: Build (Apache)
        run: npm run build-apache engineering-tools

      - name: Compress Directory
        run: |
          mkdir -p release
          cd dist/engineering-tools/browser
          zip -r ../../../release/engineering-tools-apache.zip .

      - name: Create Tag and Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Apache)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/engineering-tools-apache.zip
          asset_name: engineering-tools-apache.zip
          asset_content_type: application/zip

      - name: Clean build folder
        run: rm -rf dist

      - name: Install dependencies (production)
        run: npm ci

      - name: Build (production)
        run: npm run build-apache engineering-tools

      - name: Compress Directory (production)
        run: |
          mkdir -p release
          cd dist/engineering-tools/browser
          zip -r ../../../release/engineering-tools.zip .

      - name: Upload Release Asset (production)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/engineering-tools.zip
          asset_name: engineering-tools.zip
          asset_content_type: application/zip

  docker-build:
    needs: [release]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from package.json
        id: package_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            bradmoffat/engineering-tools:latest
            bradmoffat/engineering-tools:v${{ env.VERSION }}
